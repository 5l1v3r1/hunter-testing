# OSX/Linux (https://github.com/travis-ci-tester/toolchain-table)

os:
  - linux
  - osx

# Container-based infrastructure (Linux)
# * https://docs.travis-ci.com/user/migrating-from-legacy/#How-can-I-use-container-based-infrastructure%3F
sudo:
  - false

# Install packages differs for container-based infrastructure
# * https://docs.travis-ci.com/user/migrating-from-legacy/#How-do-I-install-APT-sources-and-packages%3F
# * http://stackoverflow.com/a/30925448/2288008
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - cmake
      - python3

      # https://github.com/travis-ci-tester/travis-test-clang-cxx-11
      - libstdc++-4.8-dev

      # https://github.com/travis-ci-tester/travis-test-gcc-cxx-11
      - g++-4.8

env:
  # Boost
  - PROJECT_DIR=examples/Boost TOOLCHAIN=default
  - PROJECT_DIR=examples/Boost TOOLCHAIN=libcxx
  - PROJECT_DIR=examples/Boost TOOLCHAIN=clang-libstdcxx
  - PROJECT_DIR=examples/Boost TOOLCHAIN=xcode
  - PROJECT_DIR=examples/Boost TOOLCHAIN=osx-10-9
  - PROJECT_DIR=examples/Boost TOOLCHAIN=gcc
  - PROJECT_DIR=examples/Boost TOOLCHAIN=gcc-4-8
  - PROJECT_DIR=examples/Boost TOOLCHAIN=ios-nocodesign
  - PROJECT_DIR=examples/Boost TOOLCHAIN=android-ndk-r10e-api-19-armeabi-v7a-neon
  - PROJECT_DIR=examples/Boost TOOLCHAIN=analyze
  - PROJECT_DIR=examples/Boost TOOLCHAIN=sanitize-address
  - PROJECT_DIR=examples/Boost TOOLCHAIN=sanitize-leak
  - PROJECT_DIR=examples/Boost TOOLCHAIN=sanitize-thread

  # Boost-filesystem
  - PROJECT_DIR=examples/Boost-filesystem TOOLCHAIN=default
  - PROJECT_DIR=examples/Boost-filesystem TOOLCHAIN=libcxx
  - PROJECT_DIR=examples/Boost-filesystem TOOLCHAIN=clang-libstdcxx
  - PROJECT_DIR=examples/Boost-filesystem TOOLCHAIN=xcode
  - PROJECT_DIR=examples/Boost-filesystem TOOLCHAIN=osx-10-9
  - PROJECT_DIR=examples/Boost-filesystem TOOLCHAIN=gcc
  - PROJECT_DIR=examples/Boost-filesystem TOOLCHAIN=gcc-4-8
  - PROJECT_DIR=examples/Boost-filesystem TOOLCHAIN=ios-nocodesign
  - PROJECT_DIR=examples/Boost-filesystem TOOLCHAIN=android-ndk-r10e-api-19-armeabi-v7a-neon
  - PROJECT_DIR=examples/Boost-filesystem TOOLCHAIN=analyze
  - PROJECT_DIR=examples/Boost-filesystem TOOLCHAIN=sanitize-address
  - PROJECT_DIR=examples/Boost-filesystem TOOLCHAIN=sanitize-leak
  - PROJECT_DIR=examples/Boost-filesystem TOOLCHAIN=sanitize-thread

  # Boost-system
  - PROJECT_DIR=examples/Boost-system TOOLCHAIN=default
  - PROJECT_DIR=examples/Boost-system TOOLCHAIN=libcxx
  - PROJECT_DIR=examples/Boost-system TOOLCHAIN=clang-libstdcxx
  - PROJECT_DIR=examples/Boost-system TOOLCHAIN=xcode
  - PROJECT_DIR=examples/Boost-system TOOLCHAIN=osx-10-9
  - PROJECT_DIR=examples/Boost-system TOOLCHAIN=gcc
  - PROJECT_DIR=examples/Boost-system TOOLCHAIN=gcc-4-8
  - PROJECT_DIR=examples/Boost-system TOOLCHAIN=ios-nocodesign
  - PROJECT_DIR=examples/Boost-system TOOLCHAIN=android-ndk-r10e-api-19-armeabi-v7a-neon
  - PROJECT_DIR=examples/Boost-system TOOLCHAIN=analyze
  - PROJECT_DIR=examples/Boost-system TOOLCHAIN=sanitize-address
  - PROJECT_DIR=examples/Boost-system TOOLCHAIN=sanitize-leak
  - PROJECT_DIR=examples/Boost-system TOOLCHAIN=sanitize-thread

  # Boost-iostreams
  - PROJECT_DIR=examples/Boost-iostreams TOOLCHAIN=default
  - PROJECT_DIR=examples/Boost-iostreams TOOLCHAIN=libcxx

  # FIXME:
  # * https://travis-ci.org/ingenue/hunter/jobs/105982173
  # - PROJECT_DIR=examples/Boost-iostreams TOOLCHAIN=clang-libstdcxx

  - PROJECT_DIR=examples/Boost-iostreams TOOLCHAIN=xcode
  - PROJECT_DIR=examples/Boost-iostreams TOOLCHAIN=osx-10-9
  - PROJECT_DIR=examples/Boost-iostreams TOOLCHAIN=gcc
  - PROJECT_DIR=examples/Boost-iostreams TOOLCHAIN=gcc-4-8

  # FIXME:
  # * https://travis-ci.org/ingenue/hunter/jobs/105982177
  # - PROJECT_DIR=examples/Boost-iostreams TOOLCHAIN=ios-nocodesign

  # FIXME:
  # * https://travis-ci.org/ingenue/hunter/jobs/105856458
  # - PROJECT_DIR=examples/Boost-iostreams TOOLCHAIN=android-ndk-r10e-api-19-armeabi-v7a-neon

  # FIXME:
  # * https://travis-ci.org/ingenue/hunter/jobs/105982178
  # * https://travis-ci.org/ingenue/hunter/jobs/105982140
  # - PROJECT_DIR=examples/Boost-iostreams TOOLCHAIN=analyze

  - PROJECT_DIR=examples/Boost-iostreams TOOLCHAIN=sanitize-address
  - PROJECT_DIR=examples/Boost-iostreams TOOLCHAIN=sanitize-leak
  - PROJECT_DIR=examples/Boost-iostreams TOOLCHAIN=sanitize-thread

matrix:
  exclude:
    ##### Boost #####
    ### Linux excludes ###
    # https://github.com/travis-ci-tester/travis-test-clang-with-libcxx
    - os: linux
      env: PROJECT_DIR=examples/Boost TOOLCHAIN=libcxx

    # Xcode is for OSX only
    - os: linux
      env: PROJECT_DIR=examples/Boost TOOLCHAIN=xcode
    - os: linux
      env: PROJECT_DIR=examples/Boost TOOLCHAIN=osx-10-9
    - os: linux
      env: PROJECT_DIR=examples/Boost TOOLCHAIN=ios-nocodesign

    # https://github.com/travis-ci-tester/travis-test-gcc-cxx-11
    - os: linux
      env: PROJECT_DIR=examples/Boost TOOLCHAIN=gcc

    ### OSX excludes ###
    # TOOLCHAIN=gcc works fine on OSX
    - os: osx
      env: PROJECT_DIR=examples/Boost TOOLCHAIN=gcc-4-8

    # https://github.com/travis-ci-tester/travis-test-mac-clang-address-sanitizer
    - os: osx
      env: PROJECT_DIR=examples/Boost TOOLCHAIN=sanitize-address

    # Linux only
    - os: osx
      env: PROJECT_DIR=examples/Boost TOOLCHAIN=sanitize-leak
    - os: osx
      env: PROJECT_DIR=examples/Boost TOOLCHAIN=sanitize-thread

    ##### Boost-filesystem #####
    ### Linux excludes ###
    # https://github.com/travis-ci-tester/travis-test-clang-with-libcxx
    - os: linux
      env: PROJECT_DIR=examples/Boost-filesystem TOOLCHAIN=libcxx

    # Xcode is for OSX only
    - os: linux
      env: PROJECT_DIR=examples/Boost-filesystem TOOLCHAIN=xcode
    - os: linux
      env: PROJECT_DIR=examples/Boost-filesystem TOOLCHAIN=osx-10-9
    - os: linux
      env: PROJECT_DIR=examples/Boost-filesystem TOOLCHAIN=ios-nocodesign

    # https://github.com/travis-ci-tester/travis-test-gcc-cxx-11
    - os: linux
      env: PROJECT_DIR=examples/Boost-filesystem TOOLCHAIN=gcc

    ### OSX excludes ###
    # TOOLCHAIN=gcc works fine on OSX
    - os: osx
      env: PROJECT_DIR=examples/Boost-filesystem TOOLCHAIN=gcc-4-8

    # https://github.com/travis-ci-tester/travis-test-mac-clang-address-sanitizer
    - os: osx
      env: PROJECT_DIR=examples/Boost-filesystem TOOLCHAIN=sanitize-address

    # Linux only
    - os: osx
      env: PROJECT_DIR=examples/Boost-filesystem TOOLCHAIN=sanitize-leak
    - os: osx
      env: PROJECT_DIR=examples/Boost-filesystem TOOLCHAIN=sanitize-thread

    ##### Boost-system #####
    ### Linux excludes ###
    # https://github.com/travis-ci-tester/travis-test-clang-with-libcxx
    - os: linux
      env: PROJECT_DIR=examples/Boost-system TOOLCHAIN=libcxx

    # Xcode is for OSX only
    - os: linux
      env: PROJECT_DIR=examples/Boost-system TOOLCHAIN=xcode
    - os: linux
      env: PROJECT_DIR=examples/Boost-system TOOLCHAIN=osx-10-9
    - os: linux
      env: PROJECT_DIR=examples/Boost-system TOOLCHAIN=ios-nocodesign

    # https://github.com/travis-ci-tester/travis-test-gcc-cxx-11
    - os: linux
      env: PROJECT_DIR=examples/Boost-system TOOLCHAIN=gcc

    ### OSX excludes ###
    # TOOLCHAIN=gcc works fine on OSX
    - os: osx
      env: PROJECT_DIR=examples/Boost-system TOOLCHAIN=gcc-4-8

    # https://github.com/travis-ci-tester/travis-test-mac-clang-address-sanitizer
    - os: osx
      env: PROJECT_DIR=examples/Boost-system TOOLCHAIN=sanitize-address

    # Linux only
    - os: osx
      env: PROJECT_DIR=examples/Boost-system TOOLCHAIN=sanitize-leak
    - os: osx
      env: PROJECT_DIR=examples/Boost-system TOOLCHAIN=sanitize-thread

    ##### Boost-iostreams #####
    ### Linux excludes ###
    # https://github.com/travis-ci-tester/travis-test-clang-with-libcxx
    - os: linux
      env: PROJECT_DIR=examples/Boost-iostreams TOOLCHAIN=libcxx

    # Xcode is for OSX only
    - os: linux
      env: PROJECT_DIR=examples/Boost-iostreams TOOLCHAIN=xcode
    - os: linux
      env: PROJECT_DIR=examples/Boost-iostreams TOOLCHAIN=osx-10-9
    - os: linux
      env: PROJECT_DIR=examples/Boost-iostreams TOOLCHAIN=ios-nocodesign

    # https://github.com/travis-ci-tester/travis-test-gcc-cxx-11
    - os: linux
      env: PROJECT_DIR=examples/Boost-iostreams TOOLCHAIN=gcc

    # FIXME: https://travis-ci.org/ingenue/hunter/jobs/105856455
    - os: linux
      env: PROJECT_DIR=examples/Boost-iostreams TOOLCHAIN=default

    ### OSX excludes ###
    # TOOLCHAIN=gcc works fine on OSX
    - os: osx
      env: PROJECT_DIR=examples/Boost-iostreams TOOLCHAIN=gcc-4-8

    # https://github.com/travis-ci-tester/travis-test-mac-clang-address-sanitizer
    - os: osx
      env: PROJECT_DIR=examples/Boost-iostreams TOOLCHAIN=sanitize-address

    # Linux only
    - os: osx
      env: PROJECT_DIR=examples/Boost-iostreams TOOLCHAIN=sanitize-leak
    - os: osx
      env: PROJECT_DIR=examples/Boost-iostreams TOOLCHAIN=sanitize-thread

install:
  - ./ci/install-deps.sh

  # Installed by install-deps.sh if platform is Linux;
  # (directory doesn't exist for OSX)
  - export PATH="`pwd`/cmake-3.4.0-Linux-x86_64/bin:${PATH}"

  # Installed by install-deps.sh if platform is OSX;
  # (directory doesn't exist for Linux)
  - export PATH="`pwd`/cmake-3.3.2-Darwin-x86_64/bin:${PATH}"

  # Installed by install-deps.sh if toolchain is Android
  # (otherwise directory doesn't exist)
  - export ANDROID_NDK_r10e="`pwd`/android-ndk-r10e"

  # Install Polly toolchains
  - POLLY_VERSION="0.9.0"
  - wget "https://github.com/ruslo/polly/archive/v${POLLY_VERSION}.tar.gz"
  - tar xf "v${POLLY_VERSION}.tar.gz"
  - export PATH="`pwd`/polly-${POLLY_VERSION}/bin:${PATH}"

  # Check versions of tools
  - which cmake
  - cmake --version
  - which python3
  - python3 --version

script:
  - python3 ./jenkins.py
